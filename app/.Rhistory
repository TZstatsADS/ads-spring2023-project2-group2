total.author=n(),.groups = 'drop'
)
by.school2 <- by.school2 %>%
ungroup() %>%
arrange(desc(total.author))
by.school2 <- by.school %>% summarise(
total.author=n(),.groups = 'drop'
)
by.school2 <- by.school2 %>%
ungroup() %>%
arrange(desc(total.author))
by.school2 <- by.school %>% summarise(
total.author=n(),.groups = 'drop'
)
by.school2 <- by.school2 %>%
ungroup() %>%
arrange(desc(total.author))
by.school2
ggplot(data=by.school2, aes(x=reorder(school,-total.author), y=total.author)) +
geom_bar(stat="identity",
fill="steelblue")+
labs(title="The duration of each school")+
theme(axis.text.x = element_text(angle=45, hjust=0.9, size = 10))
phi.ana <- phi %>% dplyr::select(school,tokenized_txt)
phi.ana <- phi[c('Analytic'),]
phi.ana <- phi %>% dplyr::select(school,tokenized_txt)
phi.ana <- phi[c('Analytic'),]
phi.ana
phi.ana <- phi %>% dplyr::select(school,tokenized_txt)
phi.ana <- phi['Analytic',]
phi.ana
library(haven)
phi <- read_csv("../data/philosophy_data.csv")
by.school <- phi %>% group_by(school)
phi
phi.ana <- phi %>% dplyr::select(school,tokenized_txt)
phi.ana <- phi %>% dplyr::select(school,tokenized_txt)
phi.ana
phi.ana <- phi %>% dplyr::select(school,tokenized_txt)
phi.ana <- phi['analytic',]
phi.ana
phi.ana <- phi['analytic',]
phi.ana
phi.ana <- phi[phi$school == 'analytic',]
phi.ana
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(school,tokenized_txt)
phi.ana
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(tokenized_txt)
phi.ana
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(tokenized_txt)
packages.used=as.list(
c(
"tidyverse",
"haven",
"devtools",
"RColorBrewer",
"data.table",
"ggplot2",
"forcats",
"vcd",
"gridExtra",
"HH",
"GGally",
"readr",
"knitr",
"markdown",
"here",
"dplyr",
"stopwords")
)
check.pkg = function(x){
if(!require(x, character.only=T)) install.packages(x,
character.only=T,
dependence=T)
}
lapply(packages.used, check.pkg)
phi.ana
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(sentence_str)
phi.ana
packages.used=as.list(
c(
"tidyverse",
"haven",
"devtools",
"RColorBrewer",
"data.table",
"ggplot2",
"forcats",
"vcd",
"gridExtra",
"HH",
"GGally",
"readr",
"knitr",
"markdown",
"here",
"dplyr",
"stopwords",
"hcandersenr",
"tidytext")
)
check.pkg = function(x){
if(!require(x, character.only=T)) install.packages(x,
character.only=T,
dependence=T)
}
lapply(packages.used, check.pkg)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(tokenized_txt)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana %>%
filter(!(word %in% stopwords(source = "smart")))
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana %>%
filter(!(word %in% stopwords(source = "stopwords-iso")))
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(sentence_str)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, text)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(sentence_str, text)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(sentence_str)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana %>%
filter(!(word %in% stopwords(source = "stopwords-iso")))
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok %>%
filter(!(word %in% stopwords(source = "stopwords-iso")))
sort(table(word),decreasing=TRUE)
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok %>%
filter(!(word %in% stopwords(source = "snowball")))
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok %>%
filter((word %in% stopwords(source = "snowball")))
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok %>%
filter(!(word %in% stopwords(source = "smart")))
sort(table(phi.ana.tok),decreasing=TRUE)
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "smart")))
sort(table(phi.ana.tok),decreasing=TRUE)
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "nltk")))
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok <- phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "nltk")))
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok <- phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "smart")))
sort(table(phi.ana.tok),decreasing=TRUE)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok <- phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "stopwords-iso")))
sort(table(phi.ana.tok),decreasing=TRUE)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
words.head()
words <- sort(table(phi.ana.tok),decreasing=TRUE)
head(words)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
head(words,20)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
head(words,15)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
head(words,10)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
words <- head(words,10)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
head(words,10)
words <- sort(table(phi.ana.tok),decreasing=TRUE)
head(words,5)
library(haven)
phi <- read_csv("../data/philosophy_data.csv")
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(sentence_str)
write.csv(phi, file = "../data/Q3.csv")
write.csv(phi.ana, file = "../data/Q3.csv")
write.csv(phi.ana, file = "/data/Q3.csv")
write.csv(phi.ana, file = "/../data/Q3.csv")
library(haven)
phi <- read_csv("../data/philosophy_data.csv")
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(sentence_str)
phi.ana
write.csv(phi.ana, file = "../data/Q3.csv")
write.csv(phi.ana, file = "../data/Q3.csv")
er
pwd
write.csv(phi.ana, file = "../data")
write.csv(phi.ana, file = "../data")
write.csv(phi.ana, file = "../data/Q3.csv")
write.csv(phi.ana, file = "../data/Q3.csv")
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select
packages.used=as.list(
c(
"tidyverse",
"haven",
"devtools",
"RColorBrewer",
"data.table",
"ggplot2",
"forcats",
"vcd",
"gridExtra",
"HH",
"GGally",
"readr",
"knitr",
"markdown",
"here",
"dplyr",
"stopwords",
"hcandersenr",
"tidytext")
)
check.pkg = function(x){
if(!require(x, character.only=T)) install.packages(x,
character.only=T,
dependence=T)
}
lapply(packages.used, check.pkg)
library(haven)
phi <- read_csv("../data/philosophy_data.csv")
head(phi, 5)
by.school <- phi %>% group_by(school)
by.school1 <- by.school %>% summarise(
min.year = min(original_publication_date),
max.year = max(original_publication_date),
dur = (max.year-min.year),
)
by.school1 <- by.school1 %>%
ungroup() %>%
arrange(desc(dur))
ggplot(data=by.school1, aes(x=reorder(school,-dur), y=dur)) +
geom_bar(stat="identity",
fill="steelblue")+
labs(title="The duration of each school")+
theme(axis.text.x = element_text(angle=45, hjust=0.9, size = 10))
head(by.school1,5)
by.school2 <- by.school %>% summarise(
total.author=n(),.groups = 'drop'
)
by.school2 <- by.school2 %>%
ungroup() %>%
arrange(desc(total.author))
ggplot(data=by.school2, aes(x=reorder(school,-total.author), y=total.author)) +
geom_bar(stat="identity",
fill="steelblue")+
labs(title="The total number of authors of each school")+
theme(axis.text.x = element_text(angle=45, hjust=0.9, size = 10))
head(by.school1,5)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(sentence_str)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% select(sentence_str)
library(dplyr)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% select(sentence_str)
library(dplyr)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana %>% select(sentence_str)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(sentence_str)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok <- phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "stopwords-iso")))
View(phi.ana)
library(stopwords)
library(hcandersenr)
library(tidyverse)
library(tidytext)
phi.ana.tok <- phi.ana %>%
unnest_tokens(word, sentence_str)
phi.ana.tok <- phi.ana.tok %>%
filter(!(word %in% stopwords("en",source = "stopwords-iso")))
View(phi.ana.tok)
View(phi.ana.tok)
View(phi.ana.tok)
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(tokenized_txt)
vec <- phi.ana$tokenized_txt
vec <- phi.ana$tokenized_txt
vec
vec <- unlist(phi.ana$tokenized_txt)
vec
phi.ana <- phi[phi$school == 'analytic',]
phi.ana <- phi.ana %>% dplyr::select(tokenized_txt)
phi.ana
vec <- phi.ana$tokenized_txt
vec
vec <- unlist(phi.ana$tokenized_txt)
vec
vec <- unlist(phi.ana$tokenized_txt,use.names=FALSE)
vec
install.packages("shiny")
install.packages('ggmap')
shiny::runApp('Downloads/GR5243/Projects/Project2')
runApp('Downloads/GR5243/Projects/Project2')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('Downloads/GR5243/Projects/Project2')
runApp('Downloads/GR5243/Projects/Project2')
runApp('Downloads/GR5243/Projects/ads-spring2023-project2-group2/app')
shiny::runApp()
runApp()
runApp('~/Downloads/GR5243/Projects/Project2')
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
View(df1)
View(df1)
View(df1_electricity)
View(df1_water)
View(df2_electricity)
View(e_18)
View(df1_electricity)
runApp()
View(e_18)
View(df1)
View(df1)
View(e_18)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rlang::last_error()
rlang::last_trace()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df_green18)
runApp()
View(df_green18)
View(df_green19)
View(df_green20)
View(df_green21)
View(df_green18)
runApp()
runApp()
View(df_green18)
runApp()
View(df_green19)
View(df_green20)
View(df_green21)
runApp()
runApp()
runApp()
runApp()
View(df_green18)
runApp()
runApp()
?register_google
ggmap_show_api_key()
showing_key()
ggmap_show_api_key()
google_key()
runApp()
register_google(key = "AIzaSyDp5deiEZA1Ou-VcHg9Z2mhfsWCztFWmqo", write = TRUE)
runApp()
runApp()
ggmap(get_map("New York",source="google",
maptype = "hybrid",
zoom=12, color = "bw")) +
geom_point(data=df_green18,  color='red')
ggmap(get_map("New York",source="google",
maptype = "hybrid",
zoom=12, color = "bw")) +
geom_point(data=df_green18, aes(x=lon,y=lat),  color='red')
runApp()
ggmap(get_map("New York",source="google",
maptype = "hybrid",
zoom=12, color = "bw")) +
geom_point(data=df_green18, aes(x=x,y=y),  color='red')
runApp()
runApp()
runApp()
get_map( getbb('lisbon'), source="df_green18")
ggmap(get_map( getbb('lisbon'), source="df_green18"))
ggmap(get_map("New York",source="google",
maptype = "hybrid",
zoom=12, color = "bw")) +
geom_point(data=df_green18, aes(x=x,y=y),  color='red')
View(df_green18)
runApp()
runApp()
mapview(starbucksNC, xcol = "Longitude", ycol = "Latitude", crs = 4269, grid = FALSE)
mapview(df_green18, xcol = "x", ycol = "y", crs = 4326, grid = FALSE)
mapview(df_green18, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE)
runApp()
mapview(df_green18, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE)
mapview(df_green19, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE)
mapview(df_green20, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE)
mapview(df_green21, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mapview(df_green18, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE
mapview(df_green18, xcol = "long", ycol = "lat", crs = 4326, grid = FALSE)
runApp()
runApp()
runApp()
