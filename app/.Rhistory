dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
dic_co =c(1,3,5,6,8,9)
for (i in dic_co){
xs[i,] = ifelse(mean(xs[i,])>1,1,0)
}
return(xs)
}
set.seed(1234)
a = dat_gen(5)
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
dic_co =c(1,3,5,6,8,9)
for (i in dic_co){
x = ifelse(mean(xs[i,])>1,1,0)
}
return(xs)
}
set.seed(1234)
a = dat_gen(5)
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
dic_co =c(1,3,5,6,8,9)
for (i in dic_co){
b = xs[i,]
x = ifelse( b >1,1,0)
}
return(xs)
}
set.seed(1234)
a = dat_gen(5)
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
dic_co =c(1,3)
for (i in dic_co){
b = xs[i,]
x = ifelse( b >1,1,0)
}
return(xs)
}
set.seed(1234)
a = dat_gen(5)
a
typeof(a)
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
dic_co =c(1,3)
for (i in dic_co){
b = xs[i,]
x = ifelse( b >1,1,0)
xs[i,] =x
}
return(xs)
}
set.seed(1234)
a = dat_gen(5)
a
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
x1 = xs[1,]
xs[1,] = ifelse(x1>mean(x1),1,0)
return(xs)
}
set.seed(1234)
a = dat_gen(5)
a
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
x1 = xs[,1]
xs[,1] = ifelse(x1>mean(x1),1,0)
return(xs)
}
set.seed(1234)
a = dat_gen(5)
a
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
set.seed(1234)
a = dat_gen(5)
a
library(mvtnorm)
dat_gen = function(n){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
library(mvtnorm)
dat_gen = function(n){
if(n=NULL){
library(mvtnorm)
dat_gen = function(n){
if(n==NULL){
n=500
}
else{
n=n
}
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
library(mvtnorm)
dat_gen = function(n){
if(n==NULL){
n=500
}
else{
n=n
}
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
a =dat_gen(5)
library(mvtnorm)
dat_gen = function(n=500){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
a =dat_gen(5)
library(mvtnorm)
dat_gen = function(n=500){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
a =dat_gen(5)
a
library(mvtnorm)
dat_gen = function(n=500){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
a
library(mvtnorm)
dat_gen = function(n=500){
mu = c(0,0,0,0,0,0,0,0,0,0)
sigma <- matrix(c(1,0,0,0,.2,0,0,0,0,0,
0,1,0,0,0,.9,0,0,0,0,
0,0,1,0,0,0,0,.2,0,0,
0,0,0,1,0,0,0,0,.9,0,
.2,0,0,0,1,0,0,0,0,0,
0,.9,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,.2,0,0,0,0,1,0,0,
0,0,0,.9,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1), nrow=10,ncol=10,byrow=TRUE)
xs = rmvnorm(n, mean=mu, sigma=sigma)
for (i in c(1,3,5,6,8,9)){
x = xs[,i]
xs[,i] = ifelse(x>mean(x),1,0)
}
return(xs)
}
a = dat_gen()
View(a)
install.packages("shiny")
runGitHub(repo="
fall2022-project2-group9",username="TZstatsADS", ref="master")
?runGitHub
?runGitHub
library(shiny)
runGitHub(repo="
fall2022-project2-group9",username="TZstatsADS", ref="master")
runGitHub(repo="
fall2022-project2-group6",username="TZstatsADS", ref="master")
runGitHub(repo="
fall2022-project2-group6",username="TZstatsADS", ref="master",subdir = "app/")
install.packages("shinydashboard")
library(shiny)
runGitHub(repo="
fall2022-project2-group6",username="TZstatsADS", ref="master",subdir = "app/")
install.package("leaflet")
install.packages("leaflet")
library(shiny)
runGitHub(repo="
fall2022-project2-group6",username="TZstatsADS", ref="master",subdir = "app/")
setwd("C:\Users\Chenghao Lu\Documents\GitHub\ads-spring2023-project2-group2\")
setwd("C:/Users/Chenghao Lu/Documents/GitHub/ads-spring2023-project2-group2/")
runApp()
runApp(subdir="app/")
setwd("C:/Users/Chenghao Lu/Documents/GitHub/ads-spring2023-project2-group2/app")
runApp()
runApp()
runApp('C:/Users/Chenghao Lu/Desktop/example')
runApp('C:/Users/Chenghao Lu/Desktop/example')
runApp('C:/Users/Chenghao Lu/Desktop/example')
knitr::opts_chunk$set(echo = TRUE)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
head(HSB)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
model1 <- lmer(mathach ~ 1 + meanses + (1|id), data=HSB, REML=TRUE)
summary(model1)
model2 <- lm(mathach ~ 1 + meanses, data=HSB)
summary(model2)
anova(model1,model2)
library(sjstats)
performance::icc(model1)
mean(GmeanRel(model2)$MeanRel)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
model1 <- lmer(mathach ~ 1 + meanses + (1|id), data=HSB, REML=TRUE)
summary(model1)
model2 <- lm(mathach ~ 1 + meanses, data=HSB)
summary(model2)
anova(model1,model2)
library(sjstats)
performance::icc(model1)
library(nlme)
library(multilevel)
model2 <- lme(mathach ~ 1 + meanses, random = ~1|id, data=HSB)
summary(model2)
print(VarCorr(model2),comp="Variance")
mean(GmeanRel(model2)$MeanRel)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
model1 <- lmer(mathach ~ 1 + meanses + (1|id), data=HSB, REML=TRUE)
summary(model1)
model2 <- lm(mathach ~ 1 + meanses, data=HSB)
summary(model2)
anova(model1,model2)
library(sjstats)
performance::icc(model1)
library(nlme)
library(multilevel)
model2 <- lme(mathach ~ 1 + meanses, random = ~1|id, data=HSB)
summary(model2)
print(VarCorr(model2),comp="Variance")
mean(GmeanRel(model2)$MeanRel)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
model1 <- lmer(mathach ~ 1 + meanses + (1|id), data=HSB, REML=TRUE)
summary(model1)
model2 <- lm(mathach ~ 1 + meanses, data=HSB)
summary(model2)
anova(model1,model2)
library(sjstats)
performance::icc(model1)
library(nlme)
library(multilevel)
model2 <- lme(mathach ~ 1 + meanses, random = ~1|id, data=HSB)
summary(model2)
print(VarCorr(model2),comp="Variance")
mean(gmeanRel(model2)$MeanRel)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
model1 <- lmer(mathach ~ 1 + meanses + (1|id), data=HSB, REML=TRUE)
summary(model1)
model2 <- lm(mathach ~ 1 + meanses, data=HSB)
summary(model2)
anova(model1,model2)
library(sjstats)
performance::icc(model1)
library(nlme)
library(multilevel)
model2 <- lme(mathach ~ 1 + meanses, random = ~1|id, data=HSB)
summary(model2)
print(VarCorr(model2),comp="Variance")
mean(gmeanrel(model2)$MeanRel)
HSB <- read.table("C:/Users/Chenghao Lu/Desktop/HSB_combined.dat", header = TRUE)
colnames (HSB)[1]<-"id"
library(lme4)
model1 <- lmer(mathach ~ 1 + sector + (1|id), data=HSB, REML=TRUE)
summary(model1)
model2 <- lm(mathach ~ 1 + sector, data=HSB)
summary(model2)
anova(model1,model2)
library(sjstats)
performance::icc(model1)
library(nlme)
library(multilevel)
model2 <- lme(mathach ~ 1 + sector, random = ~1|id, data=HSB)
summary(model2)
print(VarCorr(model2),comp="Variance")
mean(gmeanrel(model2)$MeanRel)
View(HSB)
View(HSB)
runApp('C:/Users/Chenghao Lu/Desktop/example')
shiny::runApp()
runApp('C:/Users/Chenghao Lu/Desktop/example')
total_citi_bike_df = read.csv('../example/citibike_data.csv')
total_citi_bike_df = read.csv('C:/Users/Chenghao Lu/Desktop/example/citibike_data.csv')
#Data Processing
total_citi_bike_df = read.csv('C:/Users/Chenghao Lu/Desktop/example/citibike_data.csv')
##compute the daily in and out difference for the station
total_citi_bike_df$day_diff = total_citi_bike_df$endcount - total_citi_bike_df$startcount
#assign each column to weekend or weekday
total_citi_bike_df$weekend_or_weekday = ifelse(total_citi_bike_df$weekday %in% c('Saturday','Sunday'), "Weekend", "Weekday")
#station info
citi_bike_station_info <- total_citi_bike_df[,c('station_id','station_name','station_longitude','station_latitude')]
#remove the duplicates based on station id
citi_bike_station_info <- citi_bike_station_info[!duplicated(citi_bike_station_info[ , c("station_id")]),]
#split the bike data to pre-covid and covid time period
citi_bike_pre_covid_df = total_citi_bike_df[difftime(total_citi_bike_df$date,"2019-05-31")<=0,] #2019-05-01 ~ 2019-05-31
View(citi_bike_station_info)
View(total_citi_bike_df)
#Data Processing
total_citi_bike_df = read.csv('C:/Users/Chenghao Lu/Desktop/example/citibike_data.csv')
##compute the daily in and out difference for the station
total_citi_bike_df$day_diff = total_citi_bike_df$endcount - total_citi_bike_df$startcount
#assign each column to weekend or weekday
total_citi_bike_df$weekend_or_weekday = ifelse(total_citi_bike_df$weekday %in% c('Saturday','Sunday'), "Weekend", "Weekday")
#station info
citi_bike_station_info <- total_citi_bike_df[,c('station_id','station_name','station_longitude','station_latitude')]
#remove the duplicates based on station id
citi_bike_station_info <- citi_bike_station_info[!duplicated(citi_bike_station_info[ , c("station_id")]),]
View(total_citi_bike_df)
sys.timezone()
Sys.timezone()
citi_bike_pre_covid_df = total_citi_bike_df[difftime(total_citi_bike_df$date,"2019-05-31")<=0,] #2019-05-01 ~ 2019-05-31
runApp('C:/Users/Chenghao Lu/Downloads/Spring2021-Project2-group6-master/Spring2021-Project2-group6-master/app')
runApp('C:/Users/Chenghao Lu/Downloads/Spring2021-Project2-group6-master/Spring2021-Project2-group6-master/app')
install.packages("scales")
install.packages("scales")
shiny::runApp('C:/Users/Chenghao Lu/Downloads/Spring2021-Project2-group6-master/Spring2021-Project2-group6-master/app')
shiny::runApp()
runApp()
